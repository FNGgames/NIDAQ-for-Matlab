function cfg = NI_ConfigureSession()
% Gui-based configuration for labview DAQ session
cfgFileName = [fileparts(mfilename('fullpath')) '\settings.cfg'];

% if we find a stored settings file ask user if they want to use it
if exist(cfgFileName, 'file')    
    % grab previously saved configuration file to get defaults
    confgure = questdlg('Configure Session?', ...
        'Would you like to configure the DAQ session or use your previously stored settings?', ...
        'Configure','Use Previous Settings','Use Previous Settings');
    % handle response
    switch confgure
        case 'Configure' 
        case 'Use Previous Settings'
            cfg = NI_ImportConfig;
            return;
    end    
end

% import defaults
defaults = NI_ImportConfig;

% stop all currently running DAQ services
daq.reset;

% get the list of devices in the system   
devices = daq.getDevices;
if length(devices) <= 0; 
    error(['ERROR IN NI_CREATESESSION: No NI Device Detected - ' ...
        'Check power and cable connections to your device']);
end

% get the names of those devices
deviceNames = cell(length(devices), 1);
for i=1:length(devices)
    deviceNames{i} = [devices(i).ID ' - ' devices(i).Model];
end

% display a dialog for the user to select a device
[deviceIndex,check] = listdlg ( ...
    'PromptString', 'Select Device', ...
    'ListSize', [300,300], ...
    'Name', 'Available NI DAQ Devices', ...
    'SelectionMode', 'single', ...
    'InitialValue', defaults.DeviceIndex, ...
    'ListString', deviceNames );  

% check that correct input is given and cache the device
assert(logical(check), 'Error: No Item Selected');
assert(isscalar(deviceIndex), 'Error: Multiple devices are not allowed');
device = devices(deviceIndex);

% identify the analog input and output subsystems
ss = device.Subsystems;
n = length(ss);
ai_index = -1;

% search the subsystems for analog input and output systems
for i=1:n        
    if strcmpi(ss(i).SubsystemType, 'AnalogInput')   
        aiPrompt = sprintf(['Select Analog Input Channels' ...
            '\nPress Cancel to select none']);
        channels = listdlg ( ...
            'PromptString', aiPrompt, ...
            'ListSize', [300,300], ...
            'Name', [device.ID ' - ' device.Model], ...
            'InitialValue', defaults.Channels, ...
            'ListString', device.Subsystems(i).ChannelNames );
        ai_index = i; 
    end
end     
assert(ai_index>-1, 'Error: No Analog Input channels found for this device');

% gather user input
dialog = inputdlg ( ...
    {'Log Name', ... 
    'Sampling Frequency (Hz)', ...
    'Recording Duration (s) (0=indefinite)', ...
    'Data Preview Mode' ...
    'Output Directory'}, ...
    'Configure DAQ Session', 1, ...
    {defaults.LogName, ...
    num2str(defaults.SampleRate), ...
    num2str(defaults.Duration), ...
    num2str(defaults.PreviewMode), ...
    defaults.LogDirectory} ...
);    

% to structure 
cfg = struct( ...
    'DeviceIndex', deviceIndex, ...
    'SubsystemIndex', ai_index, ...
    'Channels', channels, ...
    'SampleRate', str2double(dialog{2}), ...
    'Duration', str2double(dialog{3}), ...
    'PreviewMode', str2double(dialog{4}), ...
    'LogName', dialog{1}, ...
    'LogDirectory', dialog{5} ...
);

% check dir
if ~exist(cfg.LogDirectory, 'dir')
    cfg.LogDirectory = uigetdir( ...
        NI_StripPath(fileparts(mfilename('fullpath')), 1));
end 

% save settings to disk
NI_ExportConfig(cfg);

